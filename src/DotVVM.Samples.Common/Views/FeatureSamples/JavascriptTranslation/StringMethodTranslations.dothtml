@viewModel DotVVM.Samples.Common.ViewModels.FeatureSamples.JavascriptTranslation.StringMethodTranslationsViewModel, DotVVM.Samples.Common
@import System

<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <title></title>
</head>
<body>

    <h2 data-ui="main-text">{{value:Joke}}</h2>
    <p>Value</p><dot:TextBox Text="{value: Value}" data-ui="textbox" />

    <p>
        <dot:Button Text="Contains(value)" Click="{staticCommand: OperationResult = Joke.Contains(Value).ToString()}" />
        <dot:Button Text="Contains(value,InvariantCulture)" Click="{staticCommand: OperationResult = Joke.Contains(Value, StringComparison.InvariantCulture)}" />
        <dot:Button Text="Contains(value,InvariantCultureIgnoreCase)" Click="{staticCommand: OperationResult = Joke.Contains(Value, StringComparison.InvariantCultureIgnoreCase)}" />
    </p>

    <p>
        <dot:Button Text="EndsWith(value)" Click="{staticCommand: OperationResult = Joke.EndsWith(Value).ToString()}" />
        <dot:Button Text="EndsWith(value,InvariantCulture)" Click="{staticCommand: OperationResult = Joke.EndsWith(Value, StringComparison.InvariantCulture).ToString()}" />
        <dot:Button Text="EndsWith(value,InvariantCultureIgnoreCase)" Click="{staticCommand: OperationResult = Joke.EndsWith(Value, StringComparison.InvariantCultureIgnoreCase).ToString()}" />
    </p>

    <p>
        <dot:Button Text="IndexOf(value)" Click="{staticCommand: Index = Joke.IndexOf(Value)}" />
        <dot:Button Text="IndexOf(value,InvariantCulture)" Click="{staticCommand: Index = Joke.IndexOf(Value, StringComparison.InvariantCulture)}" />
        <dot:Button Text="IndexOf(value,InvariantCultureIgnoreCase)" Click="{staticCommand: Index = Joke.IndexOf(Value, StringComparison.InvariantCultureIgnoreCase)}" />

        <dot:Button Text="IndexOf(value,30)" Click="{staticCommand: Index = Joke.IndexOf(Value, 30)}" />
        <dot:Button Text="IndexOf(value,30,InvariantCulture)" Click="{staticCommand: Index = Joke.IndexOf(Value, 30, StringComparison.InvariantCulture)}" />
        <dot:Button Text="IndexOf(value,30,InvariantCultureIgnoreCase)" Click="{staticCommand: Index = Joke.IndexOf(Value, 30, StringComparison.InvariantCultureIgnoreCase)}" />
    </p>

    <p>
        <dot:Button Text="IsNullOrEmpty(value)" Click="{staticCommand: OperationResult = String.IsNullOrEmpty(Value).ToString()}" />
    </p>

    <p>
        <dot:Button Text="Join(., list)" Click="{staticCommand: OperationResult = String.Join('.', JoinList)}" />
        <dot:Button Text="Join( JOIN , array)" Click="{staticCommand: OperationResult = String.Join(" JOIN ", JoinArray)}" />
    </p>

    <p>
        <dot:Button Text="LastIndexOf(value)" Click="{staticCommand: Index = Joke.LastIndexOf(Value)}" />
        <dot:Button Text="LastIndexOf(value,InvariantCulture)" Click="{staticCommand: Index = Joke.LastIndexOf(Value, StringComparison.InvariantCulture)}" />
        <dot:Button Text="LastIndexOf(value,InvariantCultureIgnoreCase)" Click="{staticCommand: Index = Joke.LastIndexOf(Value, StringComparison.InvariantCultureIgnoreCase)}" />

        <dot:Button Text="LastIndexOf(value,30)" Click="{staticCommand: Index = Joke.LastIndexOf(Value, 30)}" />
        <dot:Button Text="LastIndexOf(value,30,InvariantCulture)" Click="{staticCommand: Index = Joke.LastIndexOf(Value, 30, StringComparison.InvariantCulture)}" />
        <dot:Button Text="LastIndexOf(value,30,InvariantCultureIgnoreCase)" Click="{staticCommand: Index = Joke.LastIndexOf(Value, 30, StringComparison.InvariantCultureIgnoreCase)}" />
    </p>  

    <p>
        <dot:Button Text="Replace(a, A)" Click="{staticCommand: OperationResult = Joke.Replace("a", "A")}" />
    </p>

    <p>
        <dot:Button Text="Split((char)?)" Click="{staticCommand: SplitArray = Joke.Split('?')}" />
        <dot:Button Text="Split((string)do)" Click="{staticCommand: SplitArray = Joke.Split("do")}" />
    </p>

    <p>
        <dot:Button Text="StartsWith(value)" Click="{staticCommand: OperationResult = Joke.StartsWith(Value).ToString()}" />
        <dot:Button Text="StartsWith(value,InvariantCulture)" Click="{staticCommand: OperationResult = Joke.StartsWith(Value, StringComparison.InvariantCulture).ToString()}" />
        <dot:Button Text="StartsWith(value,InvariantCultureIgnoreCase)" Click="{staticCommand: OperationResult = Joke.StartsWith(Value, StringComparison.InvariantCultureIgnoreCase).ToString()}" />
    </p>

    <p>
        <dot:Button Text="ToLower()" Click="{staticCommand: OperationResult = Joke.ToLower()}" />
        <dot:Button Text="ToUpper()" Click="{staticCommand: OperationResult = Joke.ToUpper()}" />
    </p>

    <p>Operation result</p><h2 data-ui="operation-result">{{value: OperationResult}}</h2>
    <p>IndexOf result:</p> <h2 data-ui="index-result">{{value: Index}}</h2>

    <dot:Repeater DataSource="{value: SplitArray}" data-ui="repeater">
        <p>{{value: _this}}</p>
    </dot:Repeater>

</body>
</html>


