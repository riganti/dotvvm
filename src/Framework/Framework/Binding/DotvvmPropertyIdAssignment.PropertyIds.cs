// Generated by scripts/generate-property-ids.mjs
using DotVVM.Framework.Controls;
using DotVVM.Framework.Controls.Infrastructure;

namespace DotVVM.Framework.Binding;

static partial class DotvvmPropertyIdAssignment
{
    public static class PropertyIds
    {
        /// <seealso cref="DotvvmBindableObject.DataContextProperty" />
        public const uint DotvvmBindableObject_DataContext = TypeIds.DotvvmBindableObject << 16 | 1;

        /// <seealso cref="DotvvmControl.IDProperty" />
        public const uint DotvvmControl_ID = TypeIds.DotvvmControl << 16 | 2;

        /// <seealso cref="DotvvmControl.ClientIDProperty" />
        public const uint DotvvmControl_ClientID = TypeIds.DotvvmControl << 16 | 4;

        /// <seealso cref="DotvvmControl.IncludeInPageProperty" />
        public const uint DotvvmControl_IncludeInPage = TypeIds.DotvvmControl << 16 | 6;

        /// <seealso cref="DotvvmControl.ClientIDModeProperty" />
        public const uint DotvvmControl_ClientIDMode = TypeIds.DotvvmControl << 16 | 1;

        /// <seealso cref="HtmlGenericControl.VisibleProperty" />
        public const uint HtmlGenericControl_Visible = TypeIds.HtmlGenericControl << 16 | 2;

        /// <seealso cref="HtmlGenericControl.InnerTextProperty" />
        public const uint HtmlGenericControl_InnerText = TypeIds.HtmlGenericControl << 16 | 4;

        /// <seealso cref="HtmlGenericControl.HtmlCapabilityProperty" />
        public const uint HtmlGenericControl_HtmlCapability = TypeIds.HtmlGenericControl << 16 | 1;

        /// <seealso cref="Literal.TextProperty" />
        public const uint Literal_Text = TypeIds.Literal << 16 | 2;

        /// <seealso cref="Literal.FormatStringProperty" />
        public const uint Literal_FormatString = TypeIds.Literal << 16 | 4;

        /// <seealso cref="Literal.RenderSpanElementProperty" />
        public const uint Literal_RenderSpanElement = TypeIds.Literal << 16 | 6;

        /// <seealso cref="ButtonBase.ClickProperty" />
        public const uint ButtonBase_Click = TypeIds.ButtonBase << 16 | 2;

        /// <seealso cref="ButtonBase.ClickArgumentsProperty" />
        public const uint ButtonBase_ClickArguments = TypeIds.ButtonBase << 16 | 4;

        /// <seealso cref="ButtonBase.TextProperty" />
        public const uint ButtonBase_Text = TypeIds.ButtonBase << 16 | 6;

        /// <seealso cref="ButtonBase.EnabledProperty" />
        public const uint ButtonBase_Enabled = TypeIds.ButtonBase << 16 | 1;

        /// <seealso cref="ButtonBase.TextOrContentCapabilityProperty" />
        public const uint ButtonBase_TextOrContentCapability = TypeIds.ButtonBase << 16 | 3;

        /// <seealso cref="Button.ButtonTagNameProperty" />
        public const uint Button_ButtonTagName = TypeIds.Button << 16 | 2;

        /// <seealso cref="Button.IsSubmitButtonProperty" />
        public const uint Button_IsSubmitButton = TypeIds.Button << 16 | 4;

        /// <seealso cref="TextBox.TextProperty" />
        public const uint TextBox_Text = TypeIds.TextBox << 16 | 2;

        /// <seealso cref="TextBox.ChangedProperty" />
        public const uint TextBox_Changed = TypeIds.TextBox << 16 | 4;

        /// <seealso cref="TextBox.TypeProperty" />
        public const uint TextBox_Type = TypeIds.TextBox << 16 | 6;

        /// <seealso cref="TextBox.TextInputProperty" />
        public const uint TextBox_TextInput = TypeIds.TextBox << 16 | 8;

        /// <seealso cref="TextBox.FormatStringProperty" />
        public const uint TextBox_FormatString = TypeIds.TextBox << 16 | 10;

        /// <seealso cref="TextBox.SelectAllOnFocusProperty" />
        public const uint TextBox_SelectAllOnFocus = TypeIds.TextBox << 16 | 12;

        /// <seealso cref="TextBox.EnabledProperty" />
        public const uint TextBox_Enabled = TypeIds.TextBox << 16 | 1;

        /// <seealso cref="TextBox.UpdateTextOnInputProperty" />
        public const uint TextBox_UpdateTextOnInput = TypeIds.TextBox << 16 | 3;

        /// <seealso cref="RouteLink.RouteNameProperty" />
        public const uint RouteLink_RouteName = TypeIds.RouteLink << 16 | 2;

        /// <seealso cref="RouteLink.EnabledProperty" />
        public const uint RouteLink_Enabled = TypeIds.RouteLink << 16 | 4;

        /// <seealso cref="RouteLink.TextProperty" />
        public const uint RouteLink_Text = TypeIds.RouteLink << 16 | 6;

        /// <seealso cref="RouteLink.UrlSuffixProperty" />
        public const uint RouteLink_UrlSuffix = TypeIds.RouteLink << 16 | 8;

        /// <seealso cref="RouteLink.CultureProperty" />
        public const uint RouteLink_Culture = TypeIds.RouteLink << 16 | 10;

        /// <seealso cref="CheckableControlBase.TextProperty" />
        public const uint CheckableControlBase_Text = TypeIds.CheckableControlBase << 16 | 2;

        /// <seealso cref="CheckableControlBase.CheckedValueProperty" />
        public const uint CheckableControlBase_CheckedValue = TypeIds.CheckableControlBase << 16 | 4;

        /// <seealso cref="CheckableControlBase.ChangedProperty" />
        public const uint CheckableControlBase_Changed = TypeIds.CheckableControlBase << 16 | 6;

        /// <seealso cref="CheckableControlBase.LabelCssClassProperty" />
        public const uint CheckableControlBase_LabelCssClass = TypeIds.CheckableControlBase << 16 | 8;

        /// <seealso cref="CheckableControlBase.InputCssClassProperty" />
        public const uint CheckableControlBase_InputCssClass = TypeIds.CheckableControlBase << 16 | 10;

        /// <seealso cref="CheckableControlBase.ItemKeyBindingProperty" />
        public const uint CheckableControlBase_ItemKeyBinding = TypeIds.CheckableControlBase << 16 | 12;

        /// <seealso cref="CheckBox.CheckedProperty" />
        public const uint CheckBox_Checked = TypeIds.CheckBox << 16 | 2;

        /// <seealso cref="CheckBox.CheckedItemsProperty" />
        public const uint CheckBox_CheckedItems = TypeIds.CheckBox << 16 | 4;

        /// <seealso cref="CheckBox.DisableIndeterminateProperty" />
        public const uint CheckBox_DisableIndeterminate = TypeIds.CheckBox << 16 | 6;

        /// <seealso cref="RadioButton.CheckedProperty" />
        public const uint RadioButton_Checked = TypeIds.RadioButton << 16 | 2;

        /// <seealso cref="RadioButton.CheckedItemProperty" />
        public const uint RadioButton_CheckedItem = TypeIds.RadioButton << 16 | 4;

        /// <seealso cref="RadioButton.GroupNameProperty" />
        public const uint RadioButton_GroupName = TypeIds.RadioButton << 16 | 6;

        /// <seealso cref="Validator.HideWhenValidProperty" />
        public const uint Validator_HideWhenValid = TypeIds.Validator << 16 | 1;

        /// <seealso cref="Validator.InvalidCssClassProperty" />
        public const uint Validator_InvalidCssClass = TypeIds.Validator << 16 | 3;

        /// <seealso cref="Validator.SetToolTipTextProperty" />
        public const uint Validator_SetToolTipText = TypeIds.Validator << 16 | 5;

        /// <seealso cref="Validator.ShowErrorMessageTextProperty" />
        public const uint Validator_ShowErrorMessageText = TypeIds.Validator << 16 | 7;

        /// <seealso cref="Validation.EnabledProperty" />
        public const uint Validation_Enabled = TypeIds.Validation << 16 | 1;

        /// <seealso cref="Validation.TargetProperty" />
        public const uint Validation_Target = TypeIds.Validation << 16 | 3;

        /// <seealso cref="ValidationSummary.IncludeErrorsFromChildrenProperty" />
        public const uint ValidationSummary_IncludeErrorsFromChildren = TypeIds.ValidationSummary << 16 | 2;

        /// <seealso cref="ValidationSummary.HideWhenValidProperty" />
        public const uint ValidationSummary_HideWhenValid = TypeIds.ValidationSummary << 16 | 4;

        /// <seealso cref="ValidationSummary.IncludeErrorsFromTargetProperty" />
        public const uint ValidationSummary_IncludeErrorsFromTarget = TypeIds.ValidationSummary << 16 | 6;

        /// <seealso cref="ItemsControl.DataSourceProperty" />
        public const uint ItemsControl_DataSource = TypeIds.ItemsControl << 16 | 2;

        /// <seealso cref="Repeater.EmptyDataTemplateProperty" />
        public const uint Repeater_EmptyDataTemplate = TypeIds.Repeater << 16 | 2;

        /// <seealso cref="Repeater.ItemTemplateProperty" />
        public const uint Repeater_ItemTemplate = TypeIds.Repeater << 16 | 4;

        /// <seealso cref="Repeater.RenderWrapperTagProperty" />
        public const uint Repeater_RenderWrapperTag = TypeIds.Repeater << 16 | 6;

        /// <seealso cref="Repeater.SeparatorTemplateProperty" />
        public const uint Repeater_SeparatorTemplate = TypeIds.Repeater << 16 | 8;

        /// <seealso cref="Repeater.WrapperTagNameProperty" />
        public const uint Repeater_WrapperTagName = TypeIds.Repeater << 16 | 10;

        /// <seealso cref="Repeater.RenderAsNamedTemplateProperty" />
        public const uint Repeater_RenderAsNamedTemplate = TypeIds.Repeater << 16 | 12;

        /// <seealso cref="HierarchyRepeater.ItemChildrenBindingProperty" />
        public const uint HierarchyRepeater_ItemChildrenBinding = TypeIds.HierarchyRepeater << 16 | 2;

        /// <seealso cref="HierarchyRepeater.ItemTemplateProperty" />
        public const uint HierarchyRepeater_ItemTemplate = TypeIds.HierarchyRepeater << 16 | 4;

        /// <seealso cref="HierarchyRepeater.EmptyDataTemplateProperty" />
        public const uint HierarchyRepeater_EmptyDataTemplate = TypeIds.HierarchyRepeater << 16 | 6;

        /// <seealso cref="HierarchyRepeater.RenderWrapperTagProperty" />
        public const uint HierarchyRepeater_RenderWrapperTag = TypeIds.HierarchyRepeater << 16 | 8;

        /// <seealso cref="HierarchyRepeater.WrapperTagNameProperty" />
        public const uint HierarchyRepeater_WrapperTagName = TypeIds.HierarchyRepeater << 16 | 10;

        /// <seealso cref="GridView.FilterPlacementProperty" />
        public const uint GridView_FilterPlacement = TypeIds.GridView << 16 | 2;

        /// <seealso cref="GridView.EmptyDataTemplateProperty" />
        public const uint GridView_EmptyDataTemplate = TypeIds.GridView << 16 | 4;

        /// <seealso cref="GridView.ColumnsProperty" />
        public const uint GridView_Columns = TypeIds.GridView << 16 | 6;

        /// <seealso cref="GridView.RowDecoratorsProperty" />
        public const uint GridView_RowDecorators = TypeIds.GridView << 16 | 8;

        /// <seealso cref="GridView.HeaderRowDecoratorsProperty" />
        public const uint GridView_HeaderRowDecorators = TypeIds.GridView << 16 | 10;

        /// <seealso cref="GridView.EditRowDecoratorsProperty" />
        public const uint GridView_EditRowDecorators = TypeIds.GridView << 16 | 12;

        /// <seealso cref="GridView.SortChangedProperty" />
        public const uint GridView_SortChanged = TypeIds.GridView << 16 | 14;

        /// <seealso cref="GridView.ShowHeaderWhenNoDataProperty" />
        public const uint GridView_ShowHeaderWhenNoData = TypeIds.GridView << 16 | 16;

        /// <seealso cref="GridView.InlineEditingProperty" />
        public const uint GridView_InlineEditing = TypeIds.GridView << 16 | 18;

        /// <seealso cref="GridView.LoadDataProperty" />
        public const uint GridView_LoadData = TypeIds.GridView << 16 | 20;

        /// <seealso cref="GridViewColumn.HeaderTextProperty" />
        public const uint GridViewColumn_HeaderText = TypeIds.GridViewColumn << 16 | 2;

        /// <seealso cref="GridViewColumn.HeaderTemplateProperty" />
        public const uint GridViewColumn_HeaderTemplate = TypeIds.GridViewColumn << 16 | 4;

        /// <seealso cref="GridViewColumn.FilterTemplateProperty" />
        public const uint GridViewColumn_FilterTemplate = TypeIds.GridViewColumn << 16 | 6;

        /// <seealso cref="GridViewColumn.SortExpressionProperty" />
        public const uint GridViewColumn_SortExpression = TypeIds.GridViewColumn << 16 | 8;

        /// <seealso cref="GridViewColumn.SortAscendingHeaderCssClassProperty" />
        public const uint GridViewColumn_SortAscendingHeaderCssClass = TypeIds.GridViewColumn << 16 | 10;

        /// <seealso cref="GridViewColumn.SortDescendingHeaderCssClassProperty" />
        public const uint GridViewColumn_SortDescendingHeaderCssClass = TypeIds.GridViewColumn << 16 | 12;

        /// <seealso cref="GridViewColumn.AllowSortingProperty" />
        public const uint GridViewColumn_AllowSorting = TypeIds.GridViewColumn << 16 | 14;

        /// <seealso cref="GridViewColumn.CssClassProperty" />
        public const uint GridViewColumn_CssClass = TypeIds.GridViewColumn << 16 | 16;

        /// <seealso cref="GridViewColumn.IsEditableProperty" />
        public const uint GridViewColumn_IsEditable = TypeIds.GridViewColumn << 16 | 18;

        /// <seealso cref="GridViewColumn.HeaderCssClassProperty" />
        public const uint GridViewColumn_HeaderCssClass = TypeIds.GridViewColumn << 16 | 20;

        /// <seealso cref="GridViewColumn.WidthProperty" />
        public const uint GridViewColumn_Width = TypeIds.GridViewColumn << 16 | 22;

        /// <seealso cref="GridViewColumn.VisibleProperty" />
        public const uint GridViewColumn_Visible = TypeIds.GridViewColumn << 16 | 24;

        /// <seealso cref="GridViewColumn.CellDecoratorsProperty" />
        public const uint GridViewColumn_CellDecorators = TypeIds.GridViewColumn << 16 | 26;

        /// <seealso cref="GridViewColumn.EditCellDecoratorsProperty" />
        public const uint GridViewColumn_EditCellDecorators = TypeIds.GridViewColumn << 16 | 28;

        /// <seealso cref="GridViewColumn.EditTemplateProperty" />
        public const uint GridViewColumn_EditTemplate = TypeIds.GridViewColumn << 16 | 30;

        /// <seealso cref="GridViewColumn.HeaderCellDecoratorsProperty" />
        public const uint GridViewColumn_HeaderCellDecorators = TypeIds.GridViewColumn << 16 | 32;

        /// <seealso cref="GridViewTextColumn.FormatStringProperty" />
        public const uint GridViewTextColumn_FormatString = TypeIds.GridViewTextColumn << 16 | 2;

        /// <seealso cref="GridViewTextColumn.ChangedBindingProperty" />
        public const uint GridViewTextColumn_ChangedBinding = TypeIds.GridViewTextColumn << 16 | 4;

        /// <seealso cref="GridViewTextColumn.ValueBindingProperty" />
        public const uint GridViewTextColumn_ValueBinding = TypeIds.GridViewTextColumn << 16 | 6;

        /// <seealso cref="GridViewTextColumn.ValidatorPlacementProperty" />
        public const uint GridViewTextColumn_ValidatorPlacement = TypeIds.GridViewTextColumn << 16 | 8;

        /// <seealso cref="GridViewCheckBoxColumn.ValueBindingProperty" />
        public const uint GridViewCheckBoxColumn_ValueBinding = TypeIds.GridViewCheckBoxColumn << 16 | 2;

        /// <seealso cref="GridViewCheckBoxColumn.ValidatorPlacementProperty" />
        public const uint GridViewCheckBoxColumn_ValidatorPlacement = TypeIds.GridViewCheckBoxColumn << 16 | 4;

        /// <seealso cref="GridViewTemplateColumn.ContentTemplateProperty" />
        public const uint GridViewTemplateColumn_ContentTemplate = TypeIds.GridViewTemplateColumn << 16 | 2;

        /// <seealso cref="DataPager.DataSetProperty" />
        public const uint DataPager_DataSet = TypeIds.DataPager << 16 | 2;

        /// <seealso cref="DataPager.FirstPageTemplateProperty" />
        public const uint DataPager_FirstPageTemplate = TypeIds.DataPager << 16 | 4;

        /// <seealso cref="DataPager.LastPageTemplateProperty" />
        public const uint DataPager_LastPageTemplate = TypeIds.DataPager << 16 | 6;

        /// <seealso cref="DataPager.PreviousPageTemplateProperty" />
        public const uint DataPager_PreviousPageTemplate = TypeIds.DataPager << 16 | 8;

        /// <seealso cref="DataPager.NextPageTemplateProperty" />
        public const uint DataPager_NextPageTemplate = TypeIds.DataPager << 16 | 10;

        /// <seealso cref="DataPager.RenderLinkForCurrentPageProperty" />
        public const uint DataPager_RenderLinkForCurrentPage = TypeIds.DataPager << 16 | 12;

        /// <seealso cref="DataPager.HideWhenOnlyOnePageProperty" />
        public const uint DataPager_HideWhenOnlyOnePage = TypeIds.DataPager << 16 | 14;

        /// <seealso cref="DataPager.LoadDataProperty" />
        public const uint DataPager_LoadData = TypeIds.DataPager << 16 | 16;

        /// <seealso cref="AppendableDataPager.LoadTemplateProperty" />
        public const uint AppendableDataPager_LoadTemplate = TypeIds.AppendableDataPager << 16 | 2;

        /// <seealso cref="AppendableDataPager.LoadingTemplateProperty" />
        public const uint AppendableDataPager_LoadingTemplate = TypeIds.AppendableDataPager << 16 | 4;

        /// <seealso cref="AppendableDataPager.EndTemplateProperty" />
        public const uint AppendableDataPager_EndTemplate = TypeIds.AppendableDataPager << 16 | 6;

        /// <seealso cref="AppendableDataPager.DataSetProperty" />
        public const uint AppendableDataPager_DataSet = TypeIds.AppendableDataPager << 16 | 8;

        /// <seealso cref="AppendableDataPager.LoadDataProperty" />
        public const uint AppendableDataPager_LoadData = TypeIds.AppendableDataPager << 16 | 10;

        /// <seealso cref="SelectorBase.ItemTextBindingProperty" />
        public const uint SelectorBase_ItemTextBinding = TypeIds.SelectorBase << 16 | 2;

        /// <seealso cref="SelectorBase.ItemValueBindingProperty" />
        public const uint SelectorBase_ItemValueBinding = TypeIds.SelectorBase << 16 | 4;

        /// <seealso cref="SelectorBase.SelectionChangedProperty" />
        public const uint SelectorBase_SelectionChanged = TypeIds.SelectorBase << 16 | 6;

        /// <seealso cref="SelectorBase.ItemTitleBindingProperty" />
        public const uint SelectorBase_ItemTitleBinding = TypeIds.SelectorBase << 16 | 8;

        /// <seealso cref="Selector.SelectedValueProperty" />
        public const uint Selector_SelectedValue = TypeIds.Selector << 16 | 2;

        /// <seealso cref="MultiSelector.SelectedValuesProperty" />
        public const uint MultiSelector_SelectedValues = TypeIds.MultiSelector << 16 | 2;

        /// <seealso cref="ListBox.SizeProperty" />
        public const uint ListBox_Size = TypeIds.ListBox << 16 | 2;

        /// <seealso cref="ComboBox.EmptyItemTextProperty" />
        public const uint ComboBox_EmptyItemText = TypeIds.ComboBox << 16 | 2;

        /// <seealso cref="SelectorItem.TextProperty" />
        public const uint SelectorItem_Text = TypeIds.SelectorItem << 16 | 2;

        /// <seealso cref="SelectorItem.ValueProperty" />
        public const uint SelectorItem_Value = TypeIds.SelectorItem << 16 | 4;

        /// <seealso cref="FileUpload.UploadedFilesProperty" />
        public const uint FileUpload_UploadedFiles = TypeIds.FileUpload << 16 | 2;

        /// <seealso cref="FileUpload.CaptureProperty" />
        public const uint FileUpload_Capture = TypeIds.FileUpload << 16 | 4;

        /// <seealso cref="FileUpload.MaxFileSizeProperty" />
        public const uint FileUpload_MaxFileSize = TypeIds.FileUpload << 16 | 6;

        /// <seealso cref="FileUpload.UploadCompletedProperty" />
        public const uint FileUpload_UploadCompleted = TypeIds.FileUpload << 16 | 8;

        /// <seealso cref="Timer.CommandProperty" />
        public const uint Timer_Command = TypeIds.Timer << 16 | 2;

        /// <seealso cref="Timer.IntervalProperty" />
        public const uint Timer_Interval = TypeIds.Timer << 16 | 4;

        /// <seealso cref="Timer.EnabledProperty" />
        public const uint Timer_Enabled = TypeIds.Timer << 16 | 6;

        /// <seealso cref="UpdateProgress.DelayProperty" />
        public const uint UpdateProgress_Delay = TypeIds.UpdateProgress << 16 | 2;

        /// <seealso cref="UpdateProgress.IncludedQueuesProperty" />
        public const uint UpdateProgress_IncludedQueues = TypeIds.UpdateProgress << 16 | 4;

        /// <seealso cref="UpdateProgress.ExcludedQueuesProperty" />
        public const uint UpdateProgress_ExcludedQueues = TypeIds.UpdateProgress << 16 | 6;

        /// <seealso cref="Label.ForProperty" />
        public const uint Label_For = TypeIds.Label << 16 | 2;

        /// <seealso cref="EmptyData.WrapperTagNameProperty" />
        public const uint EmptyData_WrapperTagName = TypeIds.EmptyData << 16 | 2;

        /// <seealso cref="EmptyData.RenderWrapperTagProperty" />
        public const uint EmptyData_RenderWrapperTag = TypeIds.EmptyData << 16 | 4;

        /// <seealso cref="Content.ContentPlaceHolderIDProperty" />
        public const uint Content_ContentPlaceHolderID = TypeIds.Content << 16 | 2;

        /// <seealso cref="TemplateHost.TemplateProperty" />
        public const uint TemplateHost_Template = TypeIds.TemplateHost << 16 | 2;

        /// <seealso cref="AddTemplateDecorator.AfterTemplateProperty" />
        public const uint AddTemplateDecorator_AfterTemplate = TypeIds.AddTemplateDecorator << 16 | 2;

        /// <seealso cref="AddTemplateDecorator.BeforeTemplateProperty" />
        public const uint AddTemplateDecorator_BeforeTemplate = TypeIds.AddTemplateDecorator << 16 | 4;

        /// <seealso cref="SpaContentPlaceHolder.DefaultRouteNameProperty" />
        public const uint SpaContentPlaceHolder_DefaultRouteName = TypeIds.SpaContentPlaceHolder << 16 | 2;

        /// <seealso cref="SpaContentPlaceHolder.PrefixRouteNameProperty" />
        public const uint SpaContentPlaceHolder_PrefixRouteName = TypeIds.SpaContentPlaceHolder << 16 | 4;

        /// <seealso cref="SpaContentPlaceHolder.UseHistoryApiProperty" />
        public const uint SpaContentPlaceHolder_UseHistoryApi = TypeIds.SpaContentPlaceHolder << 16 | 6;

        /// <seealso cref="ModalDialog.OpenProperty" />
        public const uint ModalDialog_Open = TypeIds.ModalDialog << 16 | 2;

        /// <seealso cref="ModalDialog.CloseOnBackdropClickProperty" />
        public const uint ModalDialog_CloseOnBackdropClick = TypeIds.ModalDialog << 16 | 4;

        /// <seealso cref="ModalDialog.CloseProperty" />
        public const uint ModalDialog_Close = TypeIds.ModalDialog << 16 | 6;

        /// <seealso cref="HtmlLiteral.HtmlProperty" />
        public const uint HtmlLiteral_Html = TypeIds.HtmlLiteral << 16 | 2;

        /// <seealso cref="RequiredResource.NameProperty" />
        public const uint RequiredResource_Name = TypeIds.RequiredResource << 16 | 2;

        /// <seealso cref="InlineScript.DependenciesProperty" />
        public const uint InlineScript_Dependencies = TypeIds.InlineScript << 16 | 2;

        /// <seealso cref="InlineScript.ScriptProperty" />
        public const uint InlineScript_Script = TypeIds.InlineScript << 16 | 4;

        /// <seealso cref="RoleView.RolesProperty" />
        public const uint RoleView_Roles = TypeIds.RoleView << 16 | 2;

        /// <seealso cref="RoleView.IsMemberTemplateProperty" />
        public const uint RoleView_IsMemberTemplate = TypeIds.RoleView << 16 | 4;

        /// <seealso cref="RoleView.IsNotMemberTemplateProperty" />
        public const uint RoleView_IsNotMemberTemplate = TypeIds.RoleView << 16 | 6;

        /// <seealso cref="RoleView.HideForAnonymousUsersProperty" />
        public const uint RoleView_HideForAnonymousUsers = TypeIds.RoleView << 16 | 8;

        /// <seealso cref="ClaimView.ClaimProperty" />
        public const uint ClaimView_Claim = TypeIds.ClaimView << 16 | 2;

        /// <seealso cref="ClaimView.ValuesProperty" />
        public const uint ClaimView_Values = TypeIds.ClaimView << 16 | 4;

        /// <seealso cref="ClaimView.HasClaimTemplateProperty" />
        public const uint ClaimView_HasClaimTemplate = TypeIds.ClaimView << 16 | 6;

        /// <seealso cref="ClaimView.HideForAnonymousUsersProperty" />
        public const uint ClaimView_HideForAnonymousUsers = TypeIds.ClaimView << 16 | 8;

        /// <seealso cref="EnvironmentView.EnvironmentsProperty" />
        public const uint EnvironmentView_Environments = TypeIds.EnvironmentView << 16 | 2;

        /// <seealso cref="EnvironmentView.IsEnvironmentTemplateProperty" />
        public const uint EnvironmentView_IsEnvironmentTemplate = TypeIds.EnvironmentView << 16 | 4;

        /// <seealso cref="EnvironmentView.IsNotEnvironmentTemplateProperty" />
        public const uint EnvironmentView_IsNotEnvironmentTemplate = TypeIds.EnvironmentView << 16 | 6;

        /// <seealso cref="JsComponent.GlobalProperty" />
        public const uint JsComponent_Global = TypeIds.JsComponent << 16 | 2;

        /// <seealso cref="JsComponent.NameProperty" />
        public const uint JsComponent_Name = TypeIds.JsComponent << 16 | 4;

        /// <seealso cref="JsComponent.WrapperTagNameProperty" />
        public const uint JsComponent_WrapperTagName = TypeIds.JsComponent << 16 | 6;

        /// <seealso cref="PostBackHandler.EventNameProperty" />
        public const uint PostBackHandler_EventName = TypeIds.PostBackHandler << 16 | 2;

        /// <seealso cref="PostBackHandler.EnabledProperty" />
        public const uint PostBackHandler_Enabled = TypeIds.PostBackHandler << 16 | 4;

        /// <seealso cref="SuppressPostBackHandler.SuppressProperty" />
        public const uint SuppressPostBackHandler_Suppress = TypeIds.SuppressPostBackHandler << 16 | 2;

        /// <seealso cref="ConcurrencyQueueSetting.EventNameProperty" />
        public const uint ConcurrencyQueueSetting_EventName = TypeIds.ConcurrencyQueueSetting << 16 | 2;

        /// <seealso cref="ConcurrencyQueueSetting.ConcurrencyQueueProperty" />
        public const uint ConcurrencyQueueSetting_ConcurrencyQueue = TypeIds.ConcurrencyQueueSetting << 16 | 4;

        /// <seealso cref="NamedCommand.NameProperty" />
        public const uint NamedCommand_Name = TypeIds.NamedCommand << 16 | 2;

        /// <seealso cref="NamedCommand.CommandProperty" />
        public const uint NamedCommand_Command = TypeIds.NamedCommand << 16 | 4;

        /// <seealso cref="PostBack.UpdateProperty" />
        public const uint PostBack_Update = TypeIds.PostBack << 16 | 2;

        /// <seealso cref="PostBack.HandlersProperty" />
        public const uint PostBack_Handlers = TypeIds.PostBack << 16 | 4;

        /// <seealso cref="PostBack.ConcurrencyQueueSettingsProperty" />
        public const uint PostBack_ConcurrencyQueueSettings = TypeIds.PostBack << 16 | 6;

        /// <seealso cref="PostBack.ConcurrencyProperty" />
        public const uint PostBack_Concurrency = TypeIds.PostBack << 16 | 1;

        /// <seealso cref="PostBack.ConcurrencyQueueProperty" />
        public const uint PostBack_ConcurrencyQueue = TypeIds.PostBack << 16 | 3;

        /// <seealso cref="FormControls.EnabledProperty" />
        public const uint FormControls_Enabled = TypeIds.FormControls << 16 | 1;

        /// <seealso cref="UITests.GenerateStubProperty" />
        public const uint UITests_GenerateStub = TypeIds.UITests << 16 | 1;

        /// <seealso cref="Internal.UniqueIDProperty" />
        public const uint Internal_UniqueID = TypeIds.Internal << 16 | 2;

        /// <seealso cref="Internal.IsNamingContainerProperty" />
        public const uint Internal_IsNamingContainer = TypeIds.Internal << 16 | 4;

        /// <seealso cref="Internal.IsControlBindingTargetProperty" />
        public const uint Internal_IsControlBindingTarget = TypeIds.Internal << 16 | 6;

        /// <seealso cref="Internal.PathFragmentProperty" />
        public const uint Internal_PathFragment = TypeIds.Internal << 16 | 8;

        /// <seealso cref="Internal.IsServerOnlyDataContextProperty" />
        public const uint Internal_IsServerOnlyDataContext = TypeIds.Internal << 16 | 10;

        /// <seealso cref="Internal.MarkupLineNumberProperty" />
        public const uint Internal_MarkupLineNumber = TypeIds.Internal << 16 | 12;

        /// <seealso cref="Internal.ClientIDFragmentProperty" />
        public const uint Internal_ClientIDFragment = TypeIds.Internal << 16 | 14;

        /// <seealso cref="Internal.IsMasterPageCompositionFinishedProperty" />
        public const uint Internal_IsMasterPageCompositionFinished = TypeIds.Internal << 16 | 16;

        /// <seealso cref="Internal.CurrentIndexBindingProperty" />
        public const uint Internal_CurrentIndexBinding = TypeIds.Internal << 16 | 18;

        /// <seealso cref="Internal.ReferencedViewModuleInfoProperty" />
        public const uint Internal_ReferencedViewModuleInfo = TypeIds.Internal << 16 | 20;

        /// <seealso cref="Internal.UsedPropertiesInfoProperty" />
        public const uint Internal_UsedPropertiesInfo = TypeIds.Internal << 16 | 22;

        /// <seealso cref="Internal.IsSpaPageProperty" />
        public const uint Internal_IsSpaPage = TypeIds.Internal << 16 | 1;

        /// <seealso cref="Internal.UseHistoryApiSpaNavigationProperty" />
        public const uint Internal_UseHistoryApiSpaNavigation = TypeIds.Internal << 16 | 3;

        /// <seealso cref="Internal.DataContextTypeProperty" />
        public const uint Internal_DataContextType = TypeIds.Internal << 16 | 5;

        /// <seealso cref="Internal.MarkupFileNameProperty" />
        public const uint Internal_MarkupFileName = TypeIds.Internal << 16 | 7;

        /// <seealso cref="Internal.RequestContextProperty" />
        public const uint Internal_RequestContext = TypeIds.Internal << 16 | 9;

        /// <seealso cref="RenderSettings.ModeProperty" />
        public const uint RenderSettings_Mode = TypeIds.RenderSettings << 16 | 1;

        /// <seealso cref="DotvvmView.DirectivesProperty" />
        public const uint DotvvmView_Directives = TypeIds.DotvvmView << 16 | 1;
    }
}
