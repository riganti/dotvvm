var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var AzureFunctionsApi;
(function (AzureFunctionsApi) {
    /* tslint:disable */
    //----------------------
    // <auto-generated>
    //     Generated using the NSwag toolchain v11.3.3.0 (NJsonSchema v9.4.2.0) (http://NSwag.org)
    // </auto-generated>
    //----------------------
    // ReSharper disable InconsistentNaming
    var Client = /** @class */ (function () {
        function Client(baseUrl, http) {
            this.jsonParseReviver = undefined;
            this.http = http ? http : window;
            this.baseUrl = baseUrl ? baseUrl : "https://dotvvmazurefunctionstest.azurewebsites.net";
        }
        /**
         * @return Success operation
         */
        Client.prototype._api_AddTableEntity_post = function (data) {
            var _this = this;
            var url_ = this.baseUrl + "/api/AddTableEntity";
            url_ = url_.replace(/[?&]$/, "");
            var content_ = JSON.stringify(data);
            var options_ = {
                body: content_,
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                }
            };
            return this.http.fetch(url_, options_).then(function (_response) {
                return _this.process_api_AddTableEntity_post(_response);
            });
        };
        Client.prototype.process_api_AddTableEntity_post = function (response) {
            var status = response.status;
            if (status === 204) {
                return response.text().then(function (_responseText) {
                    return;
                });
            }
            else if (status !== 200 && status !== 204) {
                return response.text().then(function (_responseText) {
                    return throwException("An unexpected server error occurred.", status, _responseText);
                });
            }
            return Promise.resolve(null);
        };
        /**
         * @return Success operation
         */
        Client.prototype._api_DeleteEntities_delete = function () {
            var _this = this;
            var url_ = this.baseUrl + "/api/DeleteEntities";
            url_ = url_.replace(/[?&]$/, "");
            var options_ = {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json",
                }
            };
            return this.http.fetch(url_, options_).then(function (_response) {
                return _this.process_api_DeleteEntities_delete(_response);
            });
        };
        Client.prototype.process_api_DeleteEntities_delete = function (response) {
            var status = response.status;
            if (status === 204) {
                return response.text().then(function (_responseText) {
                    return;
                });
            }
            else if (status !== 200 && status !== 204) {
                return response.text().then(function (_responseText) {
                    return throwException("An unexpected server error occurred.", status, _responseText);
                });
            }
            return Promise.resolve(null);
        };
        /**
         * @return Success operation
         */
        Client.prototype._api_GetTable_get = function () {
            var _this = this;
            var url_ = this.baseUrl + "/api/GetTable";
            url_ = url_.replace(/[?&]$/, "");
            var options_ = {
                method: "GET",
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "application/json"
                }
            };
            return this.http.fetch(url_, options_).then(function (_response) {
                return _this.process_api_GetTable_get(_response);
            });
        };
        Client.prototype.process_api_GetTable_get = function (response) {
            var _this = this;
            var status = response.status;
            if (status === 200) {
                return response.text().then(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (resultData200 && resultData200.constructor === Array) {
                        result200 = [];
                        for (var _i = 0, resultData200_1 = resultData200; _i < resultData200_1.length; _i++) {
                            var item = resultData200_1[_i];
                            result200.push(FormModel.fromJS(item));
                        }
                    }
                    return result200;
                });
            }
            else if (status !== 200 && status !== 204) {
                return response.text().then(function (_responseText) {
                    return throwException("An unexpected server error occurred.", status, _responseText);
                });
            }
            return Promise.resolve(null);
        };
        /**
         * @return Success operation
         */
        Client.prototype._api_HttpGet_get = function () {
            var _this = this;
            var url_ = this.baseUrl + "/api/HttpGet";
            url_ = url_.replace(/[?&]$/, "");
            var options_ = {
                method: "GET",
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "application/json"
                }
            };
            return this.http.fetch(url_, options_).then(function (_response) {
                return _this.process_api_HttpGet_get(_response);
            });
        };
        Client.prototype.process_api_HttpGet_get = function (response) {
            var _this = this;
            var status = response.status;
            if (status === 200) {
                return response.text().then(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 ? DataModel.fromJS(resultData200) : new DataModel();
                    return result200;
                });
            }
            else if (status !== 200 && status !== 204) {
                return response.text().then(function (_responseText) {
                    return throwException("An unexpected server error occurred.", status, _responseText);
                });
            }
            return Promise.resolve(null);
        };
        /**
         * @return Success operation
         */
        Client.prototype._api_HttpGetCountry_get = function () {
            var _this = this;
            var url_ = this.baseUrl + "/api/HttpGetCountry";
            url_ = url_.replace(/[?&]$/, "");
            var options_ = {
                method: "GET",
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "application/json"
                }
            };
            return this.http.fetch(url_, options_).then(function (_response) {
                return _this.process_api_HttpGetCountry_get(_response);
            });
        };
        Client.prototype.process_api_HttpGetCountry_get = function (response) {
            var _this = this;
            var status = response.status;
            if (status === 200) {
                return response.text().then(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 ? Country.fromJS(resultData200) : new Country();
                    return result200;
                });
            }
            else if (status !== 200 && status !== 204) {
                return response.text().then(function (_responseText) {
                    return throwException("An unexpected server error occurred.", status, _responseText);
                });
            }
            return Promise.resolve(null);
        };
        /**
         * @return Success operation
         */
        Client.prototype._api_HttpPost_post = function (data) {
            var _this = this;
            var url_ = this.baseUrl + "/api/HttpPost";
            url_ = url_.replace(/[?&]$/, "");
            var content_ = JSON.stringify(data);
            var options_ = {
                body: content_,
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "application/json"
                }
            };
            return this.http.fetch(url_, options_).then(function (_response) {
                return _this.process_api_HttpPost_post(_response);
            });
        };
        Client.prototype.process_api_HttpPost_post = function (response) {
            var _this = this;
            var status = response.status;
            if (status === 200) {
                return response.text().then(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 ? DataModel.fromJS(resultData200) : new DataModel();
                    return result200;
                });
            }
            else if (status !== 200 && status !== 204) {
                return response.text().then(function (_responseText) {
                    return throwException("An unexpected server error occurred.", status, _responseText);
                });
            }
            return Promise.resolve(null);
        };
        /**
         * @return Success operation
         */
        Client.prototype._api_UpdateTableEntity_post = function (data) {
            var _this = this;
            var url_ = this.baseUrl + "/api/UpdateTableEntity";
            url_ = url_.replace(/[?&]$/, "");
            var content_ = JSON.stringify(data);
            var options_ = {
                body: content_,
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                }
            };
            return this.http.fetch(url_, options_).then(function (_response) {
                return _this.process_api_UpdateTableEntity_post(_response);
            });
        };
        Client.prototype.process_api_UpdateTableEntity_post = function (response) {
            var status = response.status;
            if (status === 200) {
                return response.text().then(function (_responseText) {
                    return;
                });
            }
            else if (status !== 200 && status !== 204) {
                return response.text().then(function (_responseText) {
                    return throwException("An unexpected server error occurred.", status, _responseText);
                });
            }
            return Promise.resolve(null);
        };
        return Client;
    }());
    AzureFunctionsApi.Client = Client;
    var CreateFormModel = /** @class */ (function () {
        function CreateFormModel(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        CreateFormModel.prototype.init = function (data) {
            if (data) {
                this.Text = data["Text"] !== undefined ? data["Text"] : null;
                this.Number = data["Number"] !== undefined ? data["Number"] : null;
                this.Date = data["Date"] ? new Date(data["Date"].toString()) : null;
                this.ToDelete = data["ToDelete"] !== undefined ? data["ToDelete"] : null;
            }
        };
        CreateFormModel.fromJS = function (data) {
            var result = new CreateFormModel();
            result.init(data);
            return result;
        };
        CreateFormModel.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data["Text"] = this.Text !== undefined ? this.Text : null;
            data["Number"] = this.Number !== undefined ? this.Number : null;
            data["Date"] = this.Date ? this.Date.toISOString() : null;
            data["ToDelete"] = this.ToDelete !== undefined ? this.ToDelete : null;
            return data;
        };
        return CreateFormModel;
    }());
    AzureFunctionsApi.CreateFormModel = CreateFormModel;
    var FormModel = /** @class */ (function () {
        function FormModel(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        FormModel.prototype.init = function (data) {
            if (data) {
                this.PartitionsKey = data["PartitionsKey"] !== undefined ? data["PartitionsKey"] : null;
                this.RowKey = data["RowKey"] !== undefined ? data["RowKey"] : null;
                this.Timestamp = data["Timestamp"] ? new Date(data["Timestamp"].toString()) : null;
                this.Text = data["Text"] !== undefined ? data["Text"] : null;
                this.Number = data["Number"] !== undefined ? data["Number"] : null;
                this.Date = data["Date"] ? new Date(data["Date"].toString()) : null;
                this.ToDelete = data["ToDelete"] !== undefined ? data["ToDelete"] : null;
            }
        };
        FormModel.fromJS = function (data) {
            var result = new FormModel();
            result.init(data);
            return result;
        };
        FormModel.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data["PartitionsKey"] = this.PartitionsKey !== undefined ? this.PartitionsKey : null;
            data["RowKey"] = this.RowKey !== undefined ? this.RowKey : null;
            data["Timestamp"] = this.Timestamp ? this.Timestamp.toISOString() : null;
            data["Text"] = this.Text !== undefined ? this.Text : null;
            data["Number"] = this.Number !== undefined ? this.Number : null;
            data["Date"] = this.Date ? this.Date.toISOString() : null;
            data["ToDelete"] = this.ToDelete !== undefined ? this.ToDelete : null;
            return data;
        };
        return FormModel;
    }());
    AzureFunctionsApi.FormModel = FormModel;
    var DataModel = /** @class */ (function () {
        function DataModel(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        DataModel.prototype.init = function (data) {
            if (data) {
                this.Text = data["Text"] !== undefined ? data["Text"] : null;
                this.Number = data["Number"] !== undefined ? data["Number"] : null;
                this.Date = data["Date"] ? new Date(data["Date"].toString()) : null;
                this.Bool = data["Bool"] !== undefined ? data["Bool"] : null;
            }
        };
        DataModel.fromJS = function (data) {
            var result = new DataModel();
            result.init(data);
            return result;
        };
        DataModel.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data["Text"] = this.Text !== undefined ? this.Text : null;
            data["Number"] = this.Number !== undefined ? this.Number : null;
            data["Date"] = this.Date ? this.Date.toISOString() : null;
            data["Bool"] = this.Bool !== undefined ? this.Bool : null;
            return data;
        };
        return DataModel;
    }());
    AzureFunctionsApi.DataModel = DataModel;
    var Country = /** @class */ (function () {
        function Country(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        Country.prototype.init = function (data) {
            if (data) {
                this.Name = data["Name"] !== undefined ? data["Name"] : null;
                if (data["Regions"] && data["Regions"].constructor === Array) {
                    this.Regions = [];
                    for (var _i = 0, _a = data["Regions"]; _i < _a.length; _i++) {
                        var item = _a[_i];
                        this.Regions.push(Region.fromJS(item));
                    }
                }
            }
        };
        Country.fromJS = function (data) {
            var result = new Country();
            result.init(data);
            return result;
        };
        Country.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data["Name"] = this.Name !== undefined ? this.Name : null;
            if (this.Regions && this.Regions.constructor === Array) {
                data["Regions"] = [];
                for (var _i = 0, _a = this.Regions; _i < _a.length; _i++) {
                    var item = _a[_i];
                    data["Regions"].push(item.toJSON());
                }
            }
            return data;
        };
        return Country;
    }());
    AzureFunctionsApi.Country = Country;
    var Region = /** @class */ (function () {
        function Region(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        Region.prototype.init = function (data) {
            if (data) {
                this.Id = data["Id"] !== undefined ? data["Id"] : null;
                this.Name = data["Name"] !== undefined ? data["Name"] : null;
            }
        };
        Region.fromJS = function (data) {
            var result = new Region();
            result.init(data);
            return result;
        };
        Region.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data["Id"] = this.Id !== undefined ? this.Id : null;
            data["Name"] = this.Name !== undefined ? this.Name : null;
            return data;
        };
        return Region;
    }());
    AzureFunctionsApi.Region = Region;
    var SwaggerException = /** @class */ (function (_super) {
        __extends(SwaggerException, _super);
        function SwaggerException(message, status, response, result) {
            var _this = _super.call(this) || this;
            _this.message = message;
            _this.status = status;
            _this.response = response;
            _this.result = result;
            return _this;
        }
        return SwaggerException;
    }(Error));
    AzureFunctionsApi.SwaggerException = SwaggerException;
    function throwException(message, status, response, result) {
        if (result !== null && result !== undefined)
            throw result;
        else
            throw new SwaggerException(message, status, response, null);
    }
})(AzureFunctionsApi || (AzureFunctionsApi = {}));
//# sourceMappingURL=AzureFunctionsApiClient.js.map