@viewModel DotVVM.Samples.Common.ViewModels.FeatureSamples.CsharpClient.CSharpClientViewModel, DotVVM.Samples.Common
@dotnet DotVVM.Samples.BasicSamples.CSharpClient.TestCsharpModule, DotVVM.Samples.BasicSamples.CSharpClient

<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <title></title>
</head>
<body>

    <p>
        Value: <dot:TextBox data-ui="value" Text="{value: Value}" />
    </p>

    <p>
        <dot:Button data-ui="hello" Text="Hello" Click="{staticCommand: _dotnet.Hello()}" />
    </p>

    <p>
        <dot:Button data-ui="read-vm" Text="Test viewmodel access" Click="{staticCommand: ReadResult = _dotnet.TestViewModelAccess()}" />
        <span data-ui="read-vm-result">{{value: ReadResult}}</span>
    </p>

    <p>
        <dot:Button data-ui="patch-vm" Text="Patch view model" Click="{staticCommand: _dotnet.PatchViewModel(30)}" />
    </p>

    <p>
        <dot:Button data-ui="named-command" Text="Call named command" Click="{staticCommand: _dotnet.CallNamedCommand(Value)}" />
    </p>
    <dot:NamedCommand Name="TestCommand" Command="{staticCommand: Value = Value * 2}" />

    <p>
        Last console entry: <span data-ui="console">{{value: LastConsole}}</span>
    </p>

    <script type="text/javascript">
    const origConsoleLog = console.log;
    console.log = function (...args) {
        dotvvm.patchState({ LastConsole: args.join(", ") });
        origConsoleLog(...args);
    }
    </script>

</body>
</html>
