@viewModel DotVVM.Samples.Common.ViewModels.FeatureSamples.ViewModelCache.ViewModelCacheMissViewModel, DotVVM.Samples.Common

<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <title></title>
</head>
<body>

    <h1>ViewModel - Server-Side cache - simulate missing entry</h1>
    
    <p>Server-side cache enabled: <span class="cacheEnabled">{{resource: Context.Configuration.ExperimentalFeatures.ServerSideViewModelCache.IsEnabledForRoute(Context.Route.RouteName)}}</span></p>
    
    <p>Value: <span class="result">{{value: Value}}</span></p>
    <p>Requests: <span class="requestCount" data-bind="text: RequestCount"></span></p>
    
    <dot:Button Text="Increment" Click="{command: Increment()}" />
    
    <input type="button" value="Invalidate cache ID" onclick="javascript: tamperWithViewModelCacheId = true;" />

    <dot:InlineScript Dependencies="dotvvm">
        var tamperWithViewModelCacheId = false;
        var RequestCount = ko.observable(0);
        
        var origFetch = window.fetch;
        window.fetch = function(url, req) { 
            if (!url.match(/csrf/)) {           
                RequestCount(RequestCount() + 1);
            }

            if (tamperWithViewModelCacheId) {
                let reqBody = JSON.parse(req.body);
                reqBody.viewModelCacheId = "nonexisting_id";
                req.body = JSON.stringify(reqBody);

                tamperWithViewModelCacheId = false;
            }

            return origFetch.apply(this, arguments);
        };
    </dot:InlineScript>

</body>
</html>


