@viewModel DotVVM.Samples.Common.ViewModels.FeatureSamples.JavascriptTranslation.DateTimeTranslationsViewModel, DotVVM.Samples.Common

<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <title></title>

    <script src="https://cdn.jsdelivr.net/npm/timeshift-js@1.2.0/timeshift.min.js"></script>
    <script>
        (function () {
            // force UTC+01:00 for the test (careful - TimeShift cannot emulate timezones with DST, it only forces the offset)
            const originalDate = Date

            TimeShift.Date.parse = function (date) {
                let x = originalDate.parse(date)
                if (date.endsWith("Z")) {
                    return x
                }
                return x + TimeShift.getTimezoneOffset() * 60 * 1000
            }
            window.Date = TimeShift.Date;
            TimeShift.setTimezoneOffset(-120);
        }())
    </script>
</head>
<body>

    <h1>DateTime testing</h1>
    <dot:TextBox data-ui="textbox" Text="{value: DateTimeProp}" />

    <p>
        <span>Year: </span>
        <span data-ui="year">{{value: DateTimeProp.Year}}</span>
    </p>
    <p>
        <span>Month: </span>
        <span data-ui="month">{{value: DateTimeProp.Month}}</span>
    </p>
    <p>
        <span>Day: </span>
        <span data-ui="day">{{value: DateTimeProp.Day}}</span>
    </p>
    <p>
        <span>Hour: </span>
        <span data-ui="hour">{{value: DateTimeProp.Hour}}</span>
    </p>
    <p>
        <span>Minute: </span>
        <span data-ui="minute">{{value: DateTimeProp.Minute}}</span>
    </p>
    <p>
        <span>Second: </span>
        <span data-ui="second">{{value: DateTimeProp.Second}}</span>
    </p>
    <p>
        <span>Millisecond: </span>
        <span data-ui="millisecond">{{value: DateTimeProp.Millisecond}}</span>
    </p>

    <p>
        <span>ToBrowserLocalTime</span>
        <dot:TextBox data-ui="toBrowserLocalTime" Text="{value: DateTimeProp.ToBrowserLocalTime()}" />
    </p>

    <p>
        <span>ToBrowserLocalTime on nullable date</span>
        <dot:TextBox data-ui="toBrowserLocalTimeOnNullable" Text="{value: NullableDateTimeProp.ToBrowserLocalTime()}" />
        <span data-ui="toBrowserLocalTimeOnNullable" InnerText="{value: NullableDateTimeProp}"></span>
    </p>

    <p>
        <span>ToBrowserLocalTime null propagation</span>
        <dot:TextBox data-ui="toBrowserLocalTimeNullPropagation" Text="{value: NullChild.DateTimeProp.ToBrowserLocalTime()}" />
        <span data-ui="toBrowserLocalTimeNullPropagation" InnerText="{value: NullChild.DateTimeProp}"></span>
    </p>

</body>
</html>


