<Project>
  <UsingTask TaskName="_WriteProjectMetadataTask"
    TaskFactory="RoslynCodeTaskFactory"
    AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <TargetFrameworksString ParameterType="System.String"
        Required="true" />
      <AssemblyName ParameterType="System.String"
        Required="true" />
      <OutputPath ParameterType="System.String"
        Required="true" />
      <RootNamespace ParameterType="System.String"
        Required="true" />
      <ProjectFilePath ParameterType="System.String"
        Required="true" />
      <MetadataFilePath ParameterType="System.String"
        Required="true" />
      <References ParameterType="Microsoft.Build.Framework.ITaskItem[]"
        Required="true" />
      <PackageReferences ParameterType="Microsoft.Build.Framework.ITaskItem[]"
        Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System.Collections.Generic" />
      <Using Namespace="System.Text" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Reflection" />
      <Code Type="Fragment"
        Language="cs">
<![CDATA[
var targetFrameworksEnumerable = TargetFrameworksString.Trim()
  .Split(';')
  .Select(t => $"\"{t}\"");
var targetFrameworks = string.Join(", ", targetFrameworksEnumerable);
var version = string.Empty;
var reference = References
  .Select(r => new AssemblyName(r.ItemSpec))
  .FirstOrDefault(n => n.Name == "DotVVM.Framework");
if (reference is object && reference.Version is object)
{
  version = reference.Version.ToString();
}

var package = PackageReferences
    .FirstOrDefault(p => p.ItemSpec == "DotVVM" || p.ItemSpec == "DotVVM.AspNetCore" || p.ItemSpec == "DotVVM.Owin");
if (package is object)
{
  version = package.GetMetadata("Version");
}

var outputPath = OutputPath.Replace("\\", "\\\\");
var projectFilePath = ProjectFilePath.Replace("\\", "\\\\");
var metadataFilePath = MetadataFilePath.Replace("\\", "\\\\");

var sb = new StringBuilder();
sb.AppendLine("{");
sb.AppendLine($"  \"AssemblyName\": \"{AssemblyName}\",");
sb.AppendLine($"  \"OutputPath\": \"{outputPath}\",");
sb.AppendLine($"  \"RootNamespace\": \"{RootNamespace}\",");
sb.AppendLine($"  \"TargetFrameworks\": [{targetFrameworks}],");
sb.AppendLine($"  \"PackageVersion\": \"{version}\",");
sb.AppendLine($"  \"ProjectFilePath\": \"{projectFilePath}\",");
sb.AppendLine($"  \"MetadataFilePath\": \"{metadataFilePath}\"");
sb.AppendLine("}");
File.WriteAllText(MetadataFilePath, sb.ToString());
]]>
      </Code>
    </Task>
  </UsingTask>

  <Target Name="_WriteDotvvmProjectMetadata">
    <GetProjectTargetFrameworksTask ProjectPath="$(MSBuildProjectFullPath)"
      TargetFrameworks="$(TargetFrameworks)"
      TargetFramework="$(TargetFramework)"
      TargetFrameworkMoniker="$(TargetFrameworkMoniker)"
      TargetPlatformIdentifier="$(TargetPlatformIdentifier)"
      TargetPlatformVersion="$(TargetPlatformVersion)"
      TargetPlatformMinVersion="$(TargetPlatformMinVersion)">
      <Output TaskParameter="ProjectTargetFrameworks"
        PropertyName="_TargetFrameworksString" />
    </GetProjectTargetFrameworksTask>
    <_WriteProjectMetadataTask TargetFrameworksString="$(_TargetFrameworksString)"
      AssemblyName="$(AssemblyName)"
      OutputPath="$(BaseOutputPath)"
      RootNamespace="$(RootNamespace)"
      ProjectFilePath="$(MSBuildProjectFullPath)"
      MetadataFilePath="$(MSBuildThisFileDirectory)dotvvm-cli.json"
      References="@(Reference)"
      PackageReferences="@(PackageReference)" />
  </Target>
</Project>
