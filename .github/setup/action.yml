name: Set up DotVVM build
description: Sets up the build environment for the DotVVM repo.

inputs:
  sln:
    default: src/DotVVM.sln
    description: Path to a Visual Studio solution
    required: false

runs:
  using: composite
  steps:
  # nuget-related
  - uses: actions/cache@v2
    with:
      path: ~/.nuget/packages
      key: ${{ runner.os }}-nuget
  - if: ${{ runner.os == 'Windows' }}
    uses: actions/cache@v2
    with:
      path: src/packages
      key: nuget-old-style-packages

  # Node.js
  - uses: actions/setup-node@v2
    with:
      node-version: "16"
  - run: |
      corepack enable
      yarn set version stable
    shell: bash

  # .NET-related
  - uses: actions/setup-dotnet@v1
    with:
      dotnet-version: |
        5.0.403
        6.0.100
  - if: ${{ runner.os == 'Windows' }}
    uses: microsoft/setup-msbuild@v1.1

  # restore packages
  - if: ${{ runner.os == 'Windows' }}
    uses: nuget/setup-nuget@v1
  - if: ${{ runner.os == 'Windows' }}
    run: nuget restore ${{ inputs.sln }}
    shell: pwsh
  - if: ${{ runner.os == 'Windows' }}
    run: msbuild ${{ inputs.sln }} -t:Restore
    shell: pwsh
  - if: ${{ runner.os != 'Windows' }}
    run: dotnet restore ${{ inputs.sln }}
    shell: bash

  # add the build-dotvvm function
  - if: ${{ runner.os == 'Windows' }}
    run: |
      function build-dotvvm {
      param (
          [string][parameter(Position = 0)]$configuration,
          [string][parameter(Position = 0)]$targetFramework,
          [string][parameter(Position = 0)]$project)
          & "msbuild.exe" -t:Clean,Build -v:m -warnAsError `
              -p:Configuration=$configuration -p:TargetFramework=$targetFramework "$project"
      }
    shell: pwsh
