name: Github Actions

on: ["push"]

env:
  DOTVVM_ROOT: ${{ github.workspace }}
  DOTNET_NOLOGO: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

jobs:
  build-published:
    name: Build published projects without warnings
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        configuration: [Release, Debug]
    timeout-minutes: 20
    steps:
    - uses: actions/checkout@v2
    - name: Set up
      uses: ./.github/setup

    # framework
    - name: Core
      run: ./build-dotvvm.ps1 ${{ matrix.configuration }} net6.0 src/Framework/Core
    - name: Framework
      run: ./build-dotvvm.ps1 ${{ matrix.configuration }} net6.0 src/Framework/Framework
    - name: Testing
      run: ./build-dotvvm.ps1 ${{ matrix.configuration }} net6.0 src/Framework/Testing

    # hosting
    - name: Hosting.AspNetCore
      run: ./build-dotvvm.ps1 ${{ matrix.configuration }} net6.0 src/Framework/Hosting.AspNetCore
    - name: Hosting.Owin
      run: ./build-dotvvm.ps1 ${{ matrix.configuration }} net472 src/Framework/Hosting.Owin

    # command-line
    - name: CommandLine
      run: ./build-dotvvm.ps1 ${{ matrix.configuration }} net6.0 src/Tools/CommandLine

    # swashbuckle
    - name: Api.Swashbuckle.AspNetCore
      run: ./build-dotvvm.ps1 ${{ matrix.configuration }} net6.0 src/Api/Swashbuckle.AspNetCore
    - name: Api.Swashbuckle.Owin
      run: ./build-dotvvm.ps1 ${{ matrix.configuration }} net472 src/Api/Swashbuckle.Owin

    # hot reload
    - name: HotReload.Common
      run: ./build-dotvvm.ps1 ${{ matrix.configuration }} net6.0 src/Tools/HotReload/Common
    - name: HotReload.AspNetCore
      run: ./build-dotvvm.ps1 ${{ matrix.configuration }} net6.0 src/Tools/HotReload/AspNetCore
    - name: HotReload.Owin
      run: ./build-dotvvm.ps1 ${{ matrix.configuration }} net472 src/Tools/HotReload/Owin

    # application insights
    - name: Tracing.ApplicationInsights
      run: ./build-dotvvm.ps1 ${{ matrix.configuration }} net6.0 src/Tracing/ApplicationInsights
    - name: Tracing.ApplicationInsights.AspNetCore
      run: ./build-dotvvm.ps1 ${{ matrix.configuration }} net6.0 src/Tracing/ApplicationInsights.AspNetCore
    - name: Tracing.ApplicationInsights.Owin
      run: ./build-dotvvm.ps1 ${{ matrix.configuration }} net472 src/Tracing/ApplicationInsights.Owin

    # miniprofiler
    - name: Tracing.MiniProfiler.AspNetCore
      run: ./build-dotvvm.ps1 ${{ matrix.configuration }} net6.0 src/Tracing/MiniProfiler.AspNetCore
    - name: Tracing.MiniProfiler.Owin
      run: ./build-dotvvm.ps1 ${{ matrix.configuration }} net472 src/Tracing/MiniProfiler.Owin

    # dynamic data
    - name: DynamicData
      run: ./build-dotvvm.ps1 ${{ matrix.configuration }} net6.0 src/DynamicData/DynamicData

  build-all:
    name: Build all projects without errors
    runs-on: windows-2022
    timeout-minutes: 20
    steps:
    - uses: actions/checkout@v2
    - name: Set up
      uses: ./.github/setup
    - name: MSBuild build
      run: msbuild src/DotVVM.sln -v:m -t:Clean,Build -p:Configuration=Release -p:WarningLevel=0

  dotnet-unit-tests:
    name: .NET unit tests
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false # don't kill tests when one environment fails
      matrix:
        os: [ubuntu-latest, windows-2022, macOS-latest]
        configuration: [Debug, Release]
    steps:
    - uses: actions/checkout@v2
    - name: Set up
      uses: ./.github/setup
      with:
        sln: src/DotVVM.Crossplatform.slnf
    - name: Tests
      uses: ./.github/unittest
      with:
        project: src/Tests
        configuration: ${{ matrix.configuration }}
        name: framework-tests
        title: Framework Tests
    - name: Analyzers.Tests
      uses: ./.github/unittest
      with:
        project: src/Analyzers/Analyzers.Tests
        configuration: ${{ matrix.configuration }}
        name: analyzers-tests
        title: Analyzer Tests
        github-token: ${{ secrets.GITHUB_TOKEN }}

  js-tests:
    runs-on: ubuntu-latest
    name: JS unit tests
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v2
    - name: Set up
      uses: ./.github/setup
      with:
        sln: src/DotVVM.Crossplatform.slnf
    - name: yarn install
      run: yarn install --immutable
      working-directory: src/Framework/Framework/
    - name: TypeScript check
      run: yarn tsc-check
      working-directory: src/Framework/Framework/
    - name: yarn jest
      run: yarn jest --ci --reporters=default --reporters=jest-github-actions-reporter
      working-directory: src/Framework/Framework/

  ui-tests:
    name: UI tests
    runs-on: ${{ matrix.os }}
    timeout-minutes: 50
    strategy:
      fail-fast: false # don't kill tests when one environment fails
      matrix:
        browser: [firefox, chrome]
        os: [windows-2022, ubuntu-latest]
        exclude:
          - browser: firefox
            os: windows-2022

    env:
      SLN: "${{ matrix.os == 'windows-2022' && 'src/DotVVM.sln' || 'src/DotVVM.Crossplatform.slnf' }}"
    steps:
    - uses: actions/checkout@v2
    - name: Set up
      uses: ./.github/setup
      with:
        sln: ${{ env.SLN }}
    - name: Run UI tests
      uses: ./.github/uitest
      with:
        browser: ${{ matrix.browser }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
