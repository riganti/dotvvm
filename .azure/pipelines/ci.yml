trigger:
  - main

pr:
  autoCancel: true
  branches:
    include:
      - '*'

variables:
  DOTVVM_ROOT: $(Build.SourcesDirectory)
  BUILD_CONFIGURATION: Release
  DISPLAY: :42
  DOTNET_NOLOGO: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  TERM: xterm

jobs:
  - job: testLinux
    displayName: Run tests on Linux
    pool: DockerAgentsLinux
    workspace:
      clean: all
    steps:
      - task: Cache@2
        inputs:
          key: '"npm" | "$(Agent.OS)" | src/Framework/Framework/package.json'
          path: $(DOTVVM_ROOT)/.npm
          restoreKeys: '"npm" | "$(Agent.OS)"'
      - task: Cache@2
        inputs:
          key: '"nuget" | "$(Agent.OS)" | **/*.csproj | **/packages.config'
          path: $(DOTVVM_ROOT)/.nuget
      - bash: ./ci/linux/run.sh
        displayName: run.sh
        env:
          GITHUB_TOKEN: $(GitHub.Token)
      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testResultsFormat: VSTest
          testResultsFiles: $(DOTVVM_ROOT)/artifacts/test/unit-test-results.trx
          buildConfiguration: $(BUILD_CONFIGURATION)
          testRunTitle: Linux Unit Tests
          failTaskOnFailedTests: true
      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testResultsFormat: VSTest
          testResultsFiles: $(DOTVVM_ROOT)/artifacts/test/ui-test-results.trx
          buildConfiguration: $(BUILD_CONFIGURATION)
          testRunTitle: Linux UI Tests
          failTaskOnFailedTests: true
      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testResultsFormat: JUnit
          testResultsFiles: $(DOTVVM_ROOT)/artifacts/test/js-test-results.xml
          buildConfiguration: $(BUILD_CONFIGURATION)
          testRunTitle: Linux Jest Tests
          failTaskOnFailedTests: true

  - job: testWindows
    displayName: Run tests on Windows
    pool: DockerAgents
    workspace:
      clean: all
    steps:
      - task: Cache@2
        inputs:
          key: '"npm" | "$(Agent.OS)" | src/Framework/Framework/package.json'
          path: $(DOTVVM_ROOT)\.npm
          restoreKeys: '"npm" | "$(Agent.OS)"'
      - task: Cache@2
        inputs:
          key: '"nuget" | "$(Agent.OS)" | **/*.csproj | **/packages.config'
          path: $(DOTVVM_ROOT)/src/packages
      - pwsh: .\ci\windows\run.ps1
        displayName: run.ps1
        failOnStderr: false
        env:
          GITHUB_TOKEN: $(GitHub.Token)
      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testResultsFormat: VSTest
          testResultsFiles: $(DOTVVM_ROOT)\artifacts\test\unit-test-results.trx
          buildConfiguration: $(BUILD_CONFIGURATION)
          testRunTitle: Windows Unit Tests
          failTaskOnFailedTests: true
      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testResultsFormat: VSTest
          testResultsFiles: $(DOTVVM_ROOT)\artifacts\test\ui-test-results.trx
          buildConfiguration: $(BUILD_CONFIGURATION)
          testRunTitle: Windows UI Tests
          failTaskOnFailedTests: true
      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testResultsFormat: JUnit
          testResultsFiles: $(DOTVVM_ROOT)\artifacts\test\js-test-results.xml
          buildConfiguration: $(BUILD_CONFIGURATION)
          testRunTitle: Windows Jest Tests
          failTaskOnFailedTests: true
